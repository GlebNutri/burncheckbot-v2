#!/bin/bash

# ü§ñ –ï–¥–∏–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∑–∞—â–∏—Ç–æ–π
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./bot_manager_unified.sh [start|stop|restart|status|deploy|update|killall|logs]

BOT_DIR="/root/burncheckbot-v2"
PID_FILE="$BOT_DIR/bot.pid"
LOCK_FILE="$BOT_DIR/bot.lock"
LOG_FILE="$BOT_DIR/output.log"
SUPERVISOR_CONF="/etc/supervisor/conf.d/burncheckbot.conf"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_message() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞
force_kill_all_bot_processes() {
    log_message "${YELLOW}üóëÔ∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–æ—Ç–∞...${NC}"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º supervisor –ø—Ä–æ—Ü–µ—Å—Å
    supervisorctl stop burncheckbot 2>/dev/null || true
    
    # –£–±–∏–≤–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞
    pkill -9 -f "python.*bot.py" 2>/dev/null || true
    pkill -9 -f "bot.py" 2>/dev/null || true
    pkill -9 -f "python3.*bot" 2>/dev/null || true
    pkill -9 -f "venv/bin/python.*bot" 2>/dev/null || true
    
    # –ñ–¥–µ–º –ø–æ–ª–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    sleep 5
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è
    rm -f "$PID_FILE"
    rm -f "$LOCK_FILE"
    
    log_message "${GREEN}‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
check_bot_status() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º supervisor —Å—Ç–∞—Ç—É—Å
    if supervisorctl status burncheckbot 2>/dev/null | grep -q "RUNNING"; then
        return 0  # –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ supervisor
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º lock —Ñ–∞–π–ª
    if [ -f "$LOCK_FILE" ]; then
        local lock_pid=$(cat "$LOCK_FILE")
        if kill -0 "$lock_pid" 2>/dev/null; then
            return 0  # –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω
        else
            rm -f "$LOCK_FILE"  # –£–¥–∞–ª—è–µ–º –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–π lock —Ñ–∞–π–ª
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PID —Ñ–∞–π–ª
    if [ -f "$PID_FILE" ]; then
        local pid=$(cat "$PID_FILE")
        if kill -0 "$pid" 2>/dev/null; then
            return 0  # –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω
        else
            rm -f "$PID_FILE"  # –£–¥–∞–ª—è–µ–º –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–π PID —Ñ–∞–π–ª
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –≤ —Å–∏—Å—Ç–µ–º–µ
    if pgrep -f "python.*bot.py" > /dev/null 2>&1; then
        return 0  # –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω
    fi
    
    return 1  # –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞
stop_bot() {
    log_message "${YELLOW}üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞...${NC}"
    force_kill_all_bot_processes
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
start_bot() {
    log_message "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –±–æ—Ç
    if check_bot_status; then
        log_message "${YELLOW}‚ö†Ô∏è –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω! –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –ø—Ä–æ—Ü–µ—Å—Å...${NC}"
        force_kill_all_bot_processes
        sleep 3
    fi
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –±–æ—Ç–∞
    cd "$BOT_DIR" || {
        log_message "${RED}‚ùå –û—à–∏–±–∫–∞: –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $BOT_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
        return 1
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    if [ ! -f "bot.py" ]; then
        log_message "${RED}‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª bot.py –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        return 1
    fi
    
    if [ ! -f ".env" ]; then
        log_message "${RED}‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º lock —Ñ–∞–π–ª —Å PID —Ç–µ–∫—É—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
    echo $$ > "$LOCK_FILE"
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    source venv/bin/activate
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
    nohup python3 bot.py > "$LOG_FILE" 2>&1 &
    local bot_pid=$!
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PID –±–æ—Ç–∞
    echo $bot_pid > "$PID_FILE"
    
    # –ñ–¥–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º
    sleep 5
    if kill -0 $bot_pid 2>/dev/null; then
        log_message "${GREEN}‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω —Å PID $bot_pid${NC}"
        log_message "${BLUE}üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
        ps -o pid,ppid,cmd,%mem,%cpu --pid=$bot_pid 2>/dev/null || log_message "–ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
    else
        log_message "${RED}‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞${NC}"
        log_message "${BLUE}üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:${NC}"
        tail -n 10 "$LOG_FILE"
        rm -f "$PID_FILE" "$LOCK_FILE"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
restart_bot() {
    log_message "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...${NC}"
    stop_bot
    sleep 3
    start_bot
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    log_message "${BLUE}üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:${NC}"
    
    if check_bot_status; then
        echo -e "${GREEN}‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω${NC}"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ supervisor
        if supervisorctl status burncheckbot 2>/dev/null | grep -q "RUNNING"; then
            echo -e "${BLUE}üìã Supervisor —Å—Ç–∞—Ç—É—Å:${NC}"
            supervisorctl status burncheckbot
        fi
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ PID
        if [ -f "$PID_FILE" ]; then
            local pid=$(cat "$PID_FILE")
            echo -e "${BLUE}üìã PID: $pid${NC}"
            echo -e "${BLUE}üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
            ps -o pid,ppid,cmd,%mem,%cpu --pid=$pid 2>/dev/null || echo "–ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
    else
        echo -e "${RED}‚ùå –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    fi
    
    echo ""
    echo -e "${BLUE}üîç –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Python:${NC}"
    ps aux | grep python | grep -v grep || echo "–ü—Ä–æ—Ü–µ—Å—Å—ã Python –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å git
update_from_git() {
    log_message "${YELLOW}üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å git...${NC}"
    
    cd "$BOT_DIR" || {
        log_message "${RED}‚ùå –û—à–∏–±–∫–∞: –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $BOT_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
        return 1
    }
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
    if check_bot_status; then
        log_message "${YELLOW}üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...${NC}"
        stop_bot
    fi
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
    git fetch origin
    git reset --hard origin/main
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    source venv/bin/activate
    pip install -r requirements.txt
    
    log_message "${GREEN}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–ø–ª–æ—è
deploy_bot() {
    log_message "${YELLOW}üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –±–æ—Ç–∞...${NC}"
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
    log_message "${BLUE}üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã...${NC}"
    apt update && apt upgrade -y
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    log_message "${BLUE}üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    apt install python3 python3-pip python3-venv git supervisor -y
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
    log_message "${BLUE}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
    mkdir -p "$BOT_DIR"
    cd "$BOT_DIR"
    
    # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω)
    if [ ! -d ".git" ]; then
        log_message "${BLUE}üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
        git clone https://github.com/GlebNutri/burncheckbot-v2.git .
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    log_message "${BLUE}üêç –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
    python3 -m venv venv
    source venv/bin/activate
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    log_message "${BLUE}üìö –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python...${NC}"
    pip install -r requirements.txt
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Supervisor
    log_message "${BLUE}‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞...${NC}"
    cat > "$SUPERVISOR_CONF" << EOF
[program:burncheckbot]
command=$BOT_DIR/venv/bin/python $BOT_DIR/bot.py
directory=$BOT_DIR
user=root
autostart=true
autorestart=true
stderr_logfile=/var/log/burncheckbot.err.log
stdout_logfile=/var/log/burncheckbot.out.log
environment=PYTHONPATH="$BOT_DIR"
EOF
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Supervisor
    log_message "${BLUE}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Supervisor...${NC}"
    supervisorctl reread
    supervisorctl update
    
    log_message "${GREEN}‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    log_message "${BLUE}üìã –õ–æ–≥–∏ –±–æ—Ç–∞:${NC}"
    echo ""
    echo -e "${BLUE}üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:${NC}"
    tail -n 50 "$LOG_FILE" 2>/dev/null || echo "–§–∞–π–ª –ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo ""
    echo -e "${BLUE}üîç Supervisor –ª–æ–≥–∏:${NC}"
    echo -e "${BLUE}   –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥:${NC} tail -f /var/log/burncheckbot.out.log"
    echo -e "${BLUE}   –û—à–∏–±–∫–∏:${NC} tail -f /var/log/burncheckbot.err.log"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
killall() {
    log_message "${YELLOW}üíÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...${NC}"
    force_kill_all_bot_processes
    log_message "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "$1" in
    start)
        start_bot
        ;;
    stop)
        stop_bot
        ;;
    restart)
        restart_bot
        ;;
    status)
        show_status
        ;;
    deploy)
        deploy_bot
        ;;
    update)
        update_from_git
        ;;
    logs)
        show_logs
        ;;
    killall)
        killall
        ;;
    *)
        echo -e "${BLUE}ü§ñ –ï–¥–∏–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º${NC}"
        echo ""
        echo -e "${YELLOW}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|deploy|update|logs|killall}${NC}"
        echo ""
        echo -e "${GREEN}–ö–æ–º–∞–Ω–¥—ã:${NC}"
        echo -e "  ${BLUE}start${NC}   - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ (—Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è)"
        echo -e "  ${BLUE}stop${NC}    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"
        echo -e "  ${BLUE}restart${NC} - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"
        echo -e "  ${BLUE}status${NC}  - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"
        echo -e "  ${BLUE}deploy${NC}  - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
        echo -e "  ${BLUE}update${NC}  - –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–¥ —Å git"
        echo -e "  ${BLUE}logs${NC}    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞"
        echo -e "  ${BLUE}killall${NC} - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –í–°–ï –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞"
        echo ""
        echo -e "${GREEN}üîí –ó–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è:${NC}"
        echo -e "  - –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
        echo -e "  - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ PID –∏ lock —Ñ–∞–π–ª–æ–≤"
        echo -e "  - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º"
        echo -e "  - –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥—É–±–ª–µ–π"
        exit 1
        ;;
esac 